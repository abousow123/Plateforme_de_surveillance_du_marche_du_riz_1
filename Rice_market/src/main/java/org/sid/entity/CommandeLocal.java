package org.sid.entity;
// Generated 1 fï¿½vr. 2019 17:48:23 by Hibernate Tools 3.5.0.Final

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * CommandeLocal generated by hbm2java
 */
@Entity
@Table(name = "commande_local", schema = "public")
@JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
public class CommandeLocal implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Long idcomLocal;
	private StockLocal stockLocal;
	//private FactureLocal factureLocal;
	private Distributeurs distributeurs;
	private String qualite;
	private BigDecimal quantite;
	private int statut ;
	private Set<FactureLocal> factureLocals = new HashSet<FactureLocal>(0);

	public CommandeLocal() {
	}

	public CommandeLocal(Long idcomLocal, StockLocal stockLocal, Distributeurs distributeurs,int statut) {
		this.idcomLocal = idcomLocal;
		this.stockLocal = stockLocal;
		this.distributeurs = distributeurs;
		this.statut=statut ;
	}

	public CommandeLocal(Long idcomLocal, StockLocal stockLocal/*, FactureLocal factureLocal*/, Distributeurs distributeurs,
			String qualite, BigDecimal quantite, Set<FactureLocal> factureLocals) {
		this.idcomLocal = idcomLocal;
		this.stockLocal = stockLocal;
		//this.factureLocal = factureLocal;
		this.distributeurs = distributeurs;
		this.qualite = qualite;
		this.quantite = quantite;
		this.factureLocals = factureLocals;
	}

	@Id
	@GeneratedValue(strategy=GenerationType.AUTO)

	@Column(name = "idcom_local", unique = true, nullable = false)
	public Long getIdcomLocal() {
		return this.idcomLocal;
	}

	public void setIdcomLocal(Long idcomLocal) {
		this.idcomLocal = idcomLocal;
	}
	
	@Column(name = "statut")
	public int getStatut() {
		return this.statut;
	}

	public void setStatut(int statut) {
		this.statut = statut;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_stock", nullable = false)
	@JsonIgnoreProperties("commandeLocals")
	public StockLocal getStockLocal() {
		return this.stockLocal;
	}

	public void setStockLocal(StockLocal stockLocal) {
		this.stockLocal = stockLocal;
	}

//	@ManyToOne(fetch = FetchType.EAGER)
//	@JoinColumn(name = "idfact_import")
//	@JsonIgnoreProperties("commandeLocals")
//	public FactureLocal getFactureLocal() {
//		return this.factureLocal;
//	}
//
//	public void setFactureLocal(FactureLocal factureLocal) {
//		this.factureLocal = factureLocal;
//	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({ @JoinColumn(name = "id_user", referencedColumnName = "id_user", nullable = false),
			@JoinColumn(name = "id_dist", referencedColumnName = "id_dist", nullable = false) })
	@JsonIgnoreProperties("agentGouvs")
	public Distributeurs getDistributeurs() {
		return this.distributeurs;
	}

	public void setDistributeurs(Distributeurs distributeurs) {
		this.distributeurs = distributeurs;
	}

	@Column(name = "qualite", length = 254)
	public String getQualite() {
		return this.qualite;
	}

	public void setQualite(String qualite) {
		this.qualite = qualite;
	}

	@Column(name = "quantite", precision = 131089, scale = 0)
	public BigDecimal getQuantite() {
		return this.quantite;
	}

	public void setQuantite(BigDecimal quantite) {
		this.quantite = quantite;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commandeLocal")
	@JsonIgnoreProperties("commandeLocal")
	public Set<FactureLocal> getFactureLocals() {
		return this.factureLocals;
	}

	public void setFactureLocals(Set<FactureLocal> factureLocals) {
		this.factureLocals = factureLocals;
	}

}
