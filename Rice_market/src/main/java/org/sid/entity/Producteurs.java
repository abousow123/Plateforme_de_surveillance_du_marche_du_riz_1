package org.sid.entity;
// Generated 1 fï¿½vr. 2019 17:48:23 by Hibernate Tools 3.5.0.Final

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * Producteurs generated by hbm2java
 */
@Entity
@Table(name = "producteurs", schema = "public")
@JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
public class Producteurs implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Long idProd;
	private Utilisateur utilisateur;
	private Gie2 gie2;
	private Set<Deposerpaddy> deposerpaddies = new HashSet<Deposerpaddy>(0);

	public Producteurs() {
	}

	public Producteurs(Long id, Utilisateur utilisateur) {
		this.idProd = id;
		this.utilisateur = utilisateur;
	}

	public Producteurs(Long id, Utilisateur utilisateur, Gie2 gie2, Set<Deposerpaddy> deposerpaddies) {
		this.idProd = id;
		this.utilisateur = utilisateur;
		this.gie2 = gie2;
		this.deposerpaddies = deposerpaddies;
	}

	
	@Id
	@GeneratedValue(strategy=GenerationType.AUTO)
	@Column(name = "id_prod", nullable = false)
	public Long getIdProd() {
		return this.idProd;
	}

	public void setIdProd(Long id) {
		this.idProd = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_user")
	@JsonIgnoreProperties("producteurses")
	public Utilisateur getUtilisateur() {
		return this.utilisateur;
	}

	public void setUtilisateur(Utilisateur utilisateur) {
		this.utilisateur = utilisateur;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_gies2")
	public Gie2 getGie2() {
		return this.gie2;
	}

	public void setGie2(Gie2 gie2) {
		this.gie2 = gie2;
	}

	@OneToMany(cascade=CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "producteurs")
	@JsonIgnoreProperties(value={"producteurs"}, allowSetters = true)
	public Set<Deposerpaddy> getDeposerpaddies() {
		return this.deposerpaddies;
	}

	public void setDeposerpaddies(Set<Deposerpaddy> deposerpaddies) {
		this.deposerpaddies = deposerpaddies;
	}

}
