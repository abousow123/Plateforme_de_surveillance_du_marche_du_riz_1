package org.sid.entity;
// Generated 1 fï¿½vr. 2019 17:48:23 by Hibernate Tools 3.5.0.Final

import java.math.BigDecimal;
//import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
//import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * CommandeImport generated by hbm2java
 */
@Entity
@Table(name = "commande_import", schema = "public")
@JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
public class CommandeImport implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Long idcomImport;
	private Distributeurs distributeurs;
	private StockImportation stockImportation;
	private FactureImport factureImport;
	private String qualite;
	private BigDecimal quantite;
	//private Set<FactureImport> factureImports = new HashSet<FactureImport>(0);

	public CommandeImport() {
	}

	public CommandeImport(Long idcomImport, Distributeurs distributeurs, StockImportation stockImportation) {
		this.idcomImport = idcomImport;
		this.distributeurs = distributeurs;
		this.stockImportation = stockImportation;
	}

	public CommandeImport(Long idcomImport, Distributeurs distributeurs, StockImportation stockImportation,
			FactureImport factureImport, String qualite, BigDecimal quantite, Set<FactureImport> factureImports) {
		this.idcomImport = idcomImport;
		this.distributeurs = distributeurs;
		this.stockImportation = stockImportation;
		this.factureImport = factureImport;
		this.qualite = qualite;
		this.quantite = quantite;
		//this.factureImports = factureImports;
	}

	@Id
	@GeneratedValue(strategy=GenerationType.AUTO)
	@Column(name = "idcom_import", unique = true, nullable = false)
	public Long getIdcomImport() {
		return this.idcomImport;
	}

	public void setIdcomImport(Long idcomImport) {
		this.idcomImport = idcomImport;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumns({ @JoinColumn(name = "id_user", referencedColumnName = "id_user", nullable = false),
			@JoinColumn(name = "id_dist", referencedColumnName = "id_dist", nullable = false) })
	@JsonIgnoreProperties("commandeImports")
	public Distributeurs getDistributeurs() {
		return this.distributeurs;
	}

	public void setDistributeurs(Distributeurs distributeurs) {
		this.distributeurs = distributeurs;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_importation", nullable = false)
	@JsonIgnoreProperties("commandeImports")
	public StockImportation getStockImportation() {
		return this.stockImportation;
	}

	public void setStockImportation(StockImportation stockImportation) {
		this.stockImportation = stockImportation;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "idfact_import")
	@JsonIgnoreProperties("commandeImport")
	public FactureImport getFactureImport() {
		return this.factureImport;
	}

	public void setFactureImport(FactureImport factureImport) {
		this.factureImport = factureImport;
	}

	@Column(name = "qualite", length = 254)
	public String getQualite() {
		return this.qualite;
	}

	public void setQualite(String qualite) {
		this.qualite = qualite;
	}

	@Column(name = "quantite", precision = 131089, scale = 0)
	public BigDecimal getQuantite() {
		return this.quantite;
	}

	public void setQuantite(BigDecimal quantite) {
		this.quantite = quantite;
	}

//	@OneToMany(fetch = FetchType.EAGER, mappedBy = "commandeImport")
//	@JsonIgnoreProperties("commandeImport")
//	public Set<FactureImport> getFactureImports() {
//		return this.factureImports;
//	}
//
//	public void setFactureImports(Set<FactureImport> factureImports) {
//		this.factureImports = factureImports;
//	}

}
