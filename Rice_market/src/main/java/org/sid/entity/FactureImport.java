package org.sid.entity;
// Generated 1 fï¿½vr. 2019 17:48:23 by Hibernate Tools 3.5.0.Final

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
//import javax.persistence.JoinColumn;
//import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * FactureImport generated by hbm2java
 */
@Entity
@Table(name = "facture_import", schema = "public")
@JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
public class FactureImport implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Long idfactImport;
	//private CommandeImport commandeImport;
	private BigDecimal prixUnit;
	private BigDecimal prixTotal;
	private Set<CommandeImport> commandeImports = new HashSet<CommandeImport>(0);

	public FactureImport() {
	}

	public FactureImport(Long idfactImport/*, CommandeImport commandeImport*/) {
		this.idfactImport = idfactImport;
		//this.commandeImport = commandeImport;
	}

	public FactureImport(Long idfactImport, CommandeImport commandeImport, BigDecimal prixUnit, BigDecimal prixTotal,
			Set<CommandeImport> commandeImports) {
		this.idfactImport = idfactImport;
		//this.commandeImport = commandeImport;
		this.prixUnit = prixUnit;
		this.prixTotal = prixTotal;
		//this.commandeImports = commandeImports;
	}

	@Id
	@GeneratedValue(strategy=GenerationType.AUTO)
	@Column(name = "idfact_import", unique = true, nullable = false)
	public Long getIdfactImport() {
		return this.idfactImport;
	}

	public void setIdfactImport(Long idfactImport) {
		this.idfactImport = idfactImport;
	}

//	@ManyToOne(fetch = FetchType.EAGER)
//	@JoinColumn(name = "idcom_import", nullable = false)
//	@JsonIgnoreProperties("factureImport")
//	public CommandeImport getCommandeImport() {
//		return this.commandeImport;
//	}
//
//	public void setCommandeImport(CommandeImport commandeImport) {
//		this.commandeImport = commandeImport;
//	}

	@Column(name = "prix_unit", precision = 131089, scale = 0)
	public BigDecimal getPrixUnit() {
		return this.prixUnit;
	}

	public void setPrixUnit(BigDecimal prixUnit) {
		this.prixUnit = prixUnit;
	}

	@Column(name = "prix_total", precision = 131089, scale = 0)
	public BigDecimal getPrixTotal() {
		return this.prixTotal;
	}

	public void setPrixTotal(BigDecimal prixTotal) {
		this.prixTotal = prixTotal;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "factureImport")
	@JsonIgnoreProperties("factureImport")
	public Set<CommandeImport> getCommandeImports() {
		return this.commandeImports;
	}

	public void setCommandeImports(Set<CommandeImport> commandeImports) {
		this.commandeImports = commandeImports;
	}

}
