package org.sid.entity;
// Generated 1 fï¿½vr. 2019 17:48:23 by Hibernate Tools 3.5.0.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * Departement generated by hbm2java
 */
@Entity
@Table(name = "departement", schema = "public")
@JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
public class Departement implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private int idDepartement;
	private Region region;
	private String nomDepartement;
	private Set<StockImportation> stockImportations = new HashSet<StockImportation>(0);
	private Set<UsineTransformation> usineTransformations = new HashSet<UsineTransformation>(0);

	public Departement() {
	}

	public Departement(int idDepartement, Region region) {
		this.idDepartement = idDepartement;
		this.region = region;
	}

	public Departement(int idDepartement, Region region, String nomDepartement, Set<StockImportation> stockImportations,
			Set<UsineTransformation> usineTransformations) {
		this.idDepartement = idDepartement;
		this.region = region;
		this.nomDepartement = nomDepartement;
		this.stockImportations = stockImportations;
		this.usineTransformations = usineTransformations;
	}

	@Id
	@GeneratedValue(strategy=GenerationType.AUTO)
	@Column(name = "id_departement", unique = true, nullable = false)
	public int getIdDepartement() {
		return this.idDepartement;
	}

	public void setIdDepartement(int idDepartement) {
		this.idDepartement = idDepartement;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "id_region")
	@JsonIgnoreProperties("departements")
	public Region getRegion() {
		return this.region;
	}

	public void setRegion(Region region) {
		this.region = region;
	}

	@Column(name = "nom_departement", length = 254)
	public String getNomDepartement() {
		return this.nomDepartement;
	}

	public void setNomDepartement(String nomDepartement) {
		this.nomDepartement = nomDepartement;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "departement")
	@JsonIgnoreProperties("departement")
	public Set<StockImportation> getStockImportations() {
		return this.stockImportations;
	}

	public void setStockImportations(Set<StockImportation> stockImportations) {
		this.stockImportations = stockImportations;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "departement")
	@JsonIgnoreProperties("departement")
	public Set<UsineTransformation> getUsineTransformations() {
		return this.usineTransformations;
	}

	public void setUsineTransformations(Set<UsineTransformation> usineTransformations) {
		this.usineTransformations = usineTransformations;
	}

}
